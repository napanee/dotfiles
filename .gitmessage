

# Title: `type(scope): ...`
# Allowed types:
# - feat: Fügt eine neue Funktionalität hinzu.
# - fix: Behebt einen Bug.
# - chore: Änderungen, die nichts mit dem Code oder der Funktionalität zu tun haben (z. B. Build-Änderungen, Dependency-Updates).
# - docs: Änderungen an der Dokumentation.
# - style: Anpassungen, die den Code-Style betreffen (ohne funktionale Änderungen).
# - refactor: Code-Änderungen zur Verbesserung der Struktur, ohne das Verhalten zu ändern.
# - perf: Optimierungen zur Leistungsverbesserung.
# - test: Änderungen an Tests oder neue Tests.
# - revert: Macht einen vorherigen Commit rückgängig.
#
# Allowed scopes:
# ci, config, contentful, deps, i18n, routing, services, storybook, ui, utils

# No more than 50 chars. #### 100 chars is here:                                                   #

# Remember blank line between title and body.

# Body: Explain *what* and *why* (not *how*). Include task ID (Jira issue).
# Wrap at 72 chars. ################################## which is here:  #


# At the end: Include Co-authored-by for all contributors. 
# Include at least one empty line before it. Format: 
# Co-authored-by: name <user@users.noreply.github.com>
#
# How to Write a Git Commit Message:
# https://chris.beams.io/posts/git-commit/
#
# 1. Separate subject from body with a blank line
# 2. Limit the subject line to 50 characters
# 3. Capitalize the subject line
# 4. Do not end the subject line with a period
# 5. Use the imperative mood in the subject line
# 6. Wrap the body at 72 characters
# 7. Use the body to explain what and why vs. how
